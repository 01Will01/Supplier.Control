@using Supplier.Control.Presentation.Models.Supplier
@model SupplierUpdateViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Atualizar os dados</h1>

<div style="display: flex; flex-direction: row;">
    <a class="btn btn-dark" style="margin: 0 0 0 0.5vw;" asp-action="Details" asp-route-id="@Model.SupplierModel.Id"><i class="bi bi-arrow-90deg-left" title="Voltar"></i></a>
    <a class="btn btn-primary" style="margin: 0 0 0 0.5vw;" asp-action="Index"><i class="bi bi-house-fill" title="Visão Geral"></i></a>
</div>

<br />

@{
    string showGroupMessage = Model.HasResult ? "display: block;" : "display: none;";
    bool isMessageSuccess = Convert.ToBoolean(Model?.SuccessAction);

    string showMessageAlert = isMessageSuccess ? "display: none" : "display: block;";
}

<div style="@showGroupMessage">
    <div class="alert alert-warning alert-dismissible fade show" role="alert" style="@showMessageAlert" id="alert-warning">
        <strong>Erro!</strong> Fornecedor não foi atualizado.
        <button type="button" class="close btn btn-outline-dark" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        <hr />
        @foreach (string message in Model.Message)
        {
            <p class="mb-0"> @message </p>
            <hr />
        }
    </div>
</div>

<br />
<div class="card text-white bg-dark mb-3" style="width: 60%; align-items: center;">
    <div class="card-header">
        Fornecedor
    </div>
    <div class="card-body">
        <form asp-action="Edit" style="text-align-last: center;">

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="SupplierModel.Id" />
            <div class="form-group form-group-default required">
                <label asp-for="SupplierModel.Name" class="control-label"></label>
                <input asp-for="SupplierModel.Name" class="form-control" placeholder="Nome" style="text-align: center;" />
                <span asp-validation-for="SupplierModel.Name" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group form-group-default required">
                <label asp-for="SupplierModel.Document" class="control-label"></label>
                <input asp-for="SupplierModel.Document" class="form-control cpfAndcpnj" onkeypress='mascaraMutuario(this,cpfCnpj)' onblur='clearTimeout()' maxlength="18" placeholder="CPF ou CNPJ" style="text-align: center;" />
                <span asp-validation-for="SupplierModel.Document" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group form-check required">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="SupplierModel.IsActive" /> @Html.DisplayNameFor(model => model.SupplierModel.IsActive)
                </label>
            </div>
            <br />
            @{
                string showSalve = Model.CanUpdate ? "display: block;" : "display: none;";
            }
            <div class="form-group" style="@showSalve">
                <button type="submit" class="btn btn-success" style="animation: pulse-green 2s infinite;">
                    <i class="bi bi-send-check-fill" title="Confirmar atualização"></i>
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}
